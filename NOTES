Known bugs (most important at top):

 - the intro-box should be populated, and should let the user opt to paste in a key
 - all contacts should be marked as offline when the server disconnects
 - make sure tor isn't still listening on the hidden service after the client disconnects, as it would prevent
   the client from using the same ricochet id elsewhere
 - should save key & contacts list in localstorage
 - it's hard to select any messages for copy and paste because clicking in the messages area focuses the input box
 - add contact form should work even while disconnected
 - should have some way to view counterparty's ricochet id after adding & maybe change their name
 - delete contacts
 - input box should support multi-line
 - should have a little red "1" or w/e when there are unread messages
 - should have a "click to add contacts" text so they know what to do
 - should have timestamps in the chat
 - "+" sign should be black instead of grey
 - pixel-perfect positioning might not work right in other browsers
 - sort contacts by nickname, not onion
 - clicking in the box that shows your ricochet id should automatically select the whole thing
 - enter key should submit add contact form
 - we should put implicit ">" symbols in front of the other parties' messages so that copy and paste looks right
 - your ricochet id should be shown more prominently - we don't need to inherit the flaws of the qt client
 - support the "contact request" workflow instead of just assuming all contacts are accepted
 - separate "offline" and "requests" contact lists
 - initial messages should be at the bottom of the window, not the top
 - don't put a # in url bar when clicking add contacts button

Ideas on how this could work...

client-only mode
----------------

key only exists in javascript
js tells go which peers to try to connect to, and handles authentication
other than that, just simple message passing
can connect to whoever you want, but others can't connect to you
allows go part to see your messages & contacts, but not your key, and doesn't allow others to connect to you

client/server mode
------------------

key is sent to server
js tells go which peers to try to connect to, and can be told by go which peers have connected in
go can handle authentication
other than that, just simple message passing
can connect to whoever you want, and others can connect to you
allows go part to see everything, but allows others to connect to you
should js be involved in deciding whether the remote peer's authentication is legit?


so we just need a button "Share private key with server" to upgrade from client-only to client/server

How can we hook in to the authentication part in go-ricochet?


direct to tor
-------------

could we just expose access to a tor instance over the web and implement the entire thing in js? without sending the private key?

------------
Let's start with the easiest thing first:

step 1: client/server mode
 - client sends a private key to the server, which then just forwards ricochet-bot API to js over websocket
